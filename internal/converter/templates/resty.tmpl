package requests

import (
    {{- range .Imports}}
    {{.}}
    {{- end}}
)

{{if .RequestStructDef -}}
// Structs for the request body of {{.FunctionName}}
{{.RequestStructDef}}
{{- end}}

{{if .ResponseStructDef -}}
// Structs for the response body of {{.FunctionName}}
{{.ResponseStructDef}}
{{- end}}

{{- if .RequestStructName}}
const {{.ResponseStructName}}Const = "{{.PostData.Text}}"
{{- end}}

// {{.FunctionName}} executes the request based on the HAR entry.
func {{.FunctionName}}() (*{{.ResponseStructName}}, error) {
	{{- if .RequestStructName}}
	var requestBody {{.RequestStructName}}
	// Note: The PostData.Text is the escaped version of the JSON.
	if err := json.Unmarshal([]byte({{.ResponseStructName}}Const), &requestBody); err != nil {
		log.Printf("Error unmarshalling request body for {{.FunctionName}}: %v", err)
		return nil, err
	}
	{{- end}}

	// Create a Resty Client
	client := resty.New()

	// Create a request
	resp, err := client.R().

	{{- if .ResponseStructName}}
	// Automatically unmarshal the response into the corresponding struct
	SetResult(&{{.ResponseStructName}}{}).
	{{- end}}

	{{- if .Headers}}
	SetHeaders(map[string]string{
		{{- range .Headers}}
		"{{.Name}}": "{{.Value}}",
		{{- end}}
	}).
	{{- end}}

	{{- if .QueryString}}
	SetQueryParams(map[string]string{
		{{- range .QueryString}}
		"{{.Name}}": "{{.Value}}",
		{{- end}}
	}).
	{{- end}}

	{{- if .RequestStructName}}
	SetBody(requestBody).
	{{- else if .PostData.Text}}
	SetBody("{{.PostData.Text}}").
	{{- else if .PostData.Params}}
	SetFormData(map[string]string{
		{{- range .PostData.Params}}
		"{{.Name}}": "{{.Value}}",
		{{- end}}
	}).
	{{- end}}

	Execute("{{.Method}}", "{{.URL}}")
	if err != nil {
		log.Printf("Error executing request for {{.FunctionName}}: %v", err)
		return nil, err
	}

	{{- if .ResponseStructName}}
		if err != nil {
		log.Printf("Error executing request for {{.FunctionName}}: %v", err)
		return nil, err
	}
	if resp.IsError() {
		return nil, fmt.Errorf("AuthV5 failed with status code: %d", resp.StatusCode())
	}
	result := resp.Result().(*{{.ResponseStructName}})
	if result.StatusCode != 0 {
		return nil, fmt.Errorf("AuthV5 failed with status code: %d", result.StatusCode)
	}

	return result, nil
	{{- end}}
}